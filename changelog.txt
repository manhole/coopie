0.4.1 2014/11/25

- change java version: 1.7 -> 1.6
- add class: CharacterStreamOperation
- add method: FileOperation#openLineReader(File)
- add method: FileOperation#openBufferedReader(File, Charset)

misc:
- ビルドに使用するgradleのバージョンを2.1にしました。
- jarに含めるMANIFEST.MFへ、Specification-TitleとSpecification-Versionを追加しました。


0.4.0 2014/06/04

- DeprecatedにしていたopenReader,openWriterメソッドを削除しました。
- change java version: 1.6 -> 1.7
- change slf4j version: 1.6.4 -> 1.7.7
- change logback version: 1.0.0 -> 1.1.2
- change poi version: 3.1 -> 3.9
- add: poi-ooxml 3.9
  xlsx形式のExcelファイルに対応しました。
  org.apache.poi.hssf.usermodelからorg.apache.poi.ss.usermodelのインタフェースを使うように変更しました。
- Excelで式が入力されているセルから、式を評価した値を取得できるようにしました。

misc:
- ビルドに使用するgradleのバージョンを1.11にし、gradle wrapperを使うようにしました。


0.3.1 2014/03/04

- add class: RandomString
- LineReadableをIterable<Line>にしました。
- add method: FileOperation#readLines
- FileOperation: メソッド単位でCharsetを指定してwriteできるようにしました。
- add method: Text#compactSpace, Text#convertLineSeparator
- Text#trimWhitespace: 160(0xA0)をtrim対象にしました。
- BeanCsvLayoutなどがRecordInOutをimplementsするのを廃止し、buildメソッドでRecordInOutを返すように変更しました。
- add method: Line#createCopy
- ExcelToCsvで、日時型セル値を日時文字列としてcsvへ出力できるようにしました。(今まではシリアル値が出力されていた)
- rename: TrimStrategy -> CharacterGroup

groovy:
- Csv: lineSeparatorプロパティをLineSeparator型でも指定できるようにしました。
- Csv: converterを指定できるようにしました。
- add method: Csv#withWriter(output)
- add method: Csv#withBeanWriter
- Csv#eachRecord: CSV要素をclosure引数に展開して受け取れるようにしました。

misc:
- ビルドに使用するgradleのバージョンを変更しました: 1.6 -> 1.8
- gradle 1.7でのmaven-publishエラーに対応ました。


0.3.0 2013/07/29

- gradleのmultiproject構成にしました。maven2(maven3)のpom.xmlは廃止しました。
- coopie-groovyを追加しました。
- slf4jとlogbackのバージョンを、それぞれ1.6.4と1.0.0にしました。
  (0.2.2でgradleでデプロイした際に戻ってしまっていた。)
- ByteSizeUnit, ByteSizeUnitsを別ファイルへ分離。
  ByteSizeUnit#multiplyを追加。


0.2.2 2013/05/27

- rename: DurationMeasurer -> DurationMeasure
- Converterを追加。カラムとプロパティ間の型を変換できるようにし、String以外の型をプロパティに使用できるようにしました。
- CsvColumnSetup#column(String propertyName, String label) を廃止。
  カラム名とプロパティ名が異なる場合は明示的にtoPropertyを呼んでください。
- PropertyBinding, PropertyBindingFactoryを追加。
- ColumnNameMatcherを追加。
- CsvRecordDefCustomizerを導入。
  property情報やアノテーションから構築したCsvRecordDefを、変更できるようにしました。
- @CsvColumnsアノテーションを追加。
  アノテーションでも1プロパティを複数カラムへ対応付けられるようにしました。
- PropertyとColumnの関係を、Property側を1に対して、Column側をn持てるようにしました。
- 設定情報をRecordDefへ持たせるようにして、RecordDefからRecordDescを作るよう内部処理を変更しました。
- ライセンスをASL 2.0にしました。
- groovyから利用するため、@CsvColumnをFIELDにも付けられるようにしました。
- gradleでjarとpomを作成できるようにしました。


0.2.1 2012/02/23

- junitのバージョンを4.8.1 -> 4.10へ。junit-addonsをdependencyから外し、替わりにhamcrestを追加。
- add: LineReader#readLine(final Line line)
- setupで指定したプロパティ名がBeanに無い場合は、PropertyNotFoundExceptionを投げるようにしました。
- add: Duration
- rename: FileSize -> ByteSize
- add: ByteSize#toHumanReadableString
- ByteSize: テラバイト・ペタバイトに対応
- BufferedReadable: char配列でも取得できるようにしました
- add: Line#getBodyAndSeparator
- LineReadable: パフォーマンス改善。BufferedReadableではなく直接CharBufferを使用し、char[]でループを回すようにした。
- Rfc4180Reader: パフォーマンス改善。1文字ずつではなく、行単位でループを回すようにした。など。
- クォートで開始した要素が閉じクォートが無いままEOFになった場合は、クォート文字を要素に含む要素として扱うことにしました。
  (既存の動作が変わります。今までは最後にクォートを補っていました)
- add: ByteSize.create: InputStreamのバイナリサイズを測る
- add: ByteSize.ToStringMode: ByteSize#toStringの出力モードを変更できるようにしました。
- add: FileOperation#write(File file, InputStream is)
- add: BinaryStreamOperation. FileOperationから分離
- ByteSize: 文字列表現の形式を変更(ex: 530.48 KB -> 530.48 KiB)
- ByteSize: 単位を1000区切りとするのか1024区切りとするのかを切り換えられるようにしました。


0.2.0 2011/12/14

- CsvAssertをtest -> mainへ移動
- rename: CsvReader/CsvWriter -> RecordReader/RecordWriter
- rename (internal API): XxxColumnSetup -> XxxRecordDescSetup
- add: Rfc4180Reader, Rfc4180Writer. instead of OpenCSV
- add: CsvColumn annotation. アノテーションからRecordDescを構築できるようにしました。
- add: util package
- add: Line, LineSeparator, LineReadable
- Reader/Writerの替わりに、なるべくReadable/Appendableを扱うようにしました。
- 固定長ファイル関連クラスをflパッケージへ移動しました。
- add: ElementEditor. 読んだ要素を編集(trimなど)できるようにしました。
- slf4jとlogbackのバージョンを、それぞれ 1.6.4と1.0.0へバージョンアップしました。
- rename: FixedLengthColumnDesc -> FixedLengthElementDesc
- add: RecordReader#getRecordNumber()
- add: ElementReader#getLineNumber()
- CSV parse時に問題のあった行について、warnへ詳しいログを出力するようにしました。
- 固定長入出力で指定する文字数が、サロゲートペアを考慮するようにしました。
  (charとしては2つでも、1文字としてカウントできるように)
- rename: ElementSetting -> ElementInOut
- rename: CsvLayout -> RecordInOut
- rename: ExcelLayout -> ExcelInOut
- add: LineReaderHandler, ElementReaderHandler. LineReaderやElementReaderレベルで不要行をfilterできるようにしました。


0.1.7 2011/11/15

- システム環境変数"line.separator"をIOUtilから取得できるようにしました。
- DeleteResultを導入し、ファイル削除結果を取得できるようにしました。
- rename: FileCallback -> Callback
- add: FileSize
- pom.xmlをMaven3用に修正しました。
- CsvElementReader#getRecordNo()の初期値を-1から0に変更しました。
- add: BeanMap
- add: Logger interface


0.1.6 2011/08/23

- ClosingGuardianを導入しました。
- カンマ区切りを読み書きできるようにしました。
  (CsvReaderと言いながら、今まではTAB区切りのみだった)
- 作成したExcelのスタイルを変更しやすいAPI(DefaultExcelWriter.WriteEditor)を導入しました。
- 1つのLayoutインスタンスから何度もCsvReaderをopenしたとき、
  それぞれのReaderで正しく読める(前の状態が干渉しないこと)ようにしました。
- 入力するCSV側の列がsetupした列より少ない場合に、CSV側に無い項目はbeanにnullをsetするようにしました。
- add: ContextClassLoaderBlock
- add: StdOutBlock
- add: TaskExecutable
- add: VarArgs (test -> main)
- rename: AbstractCsvReader.CustomLayout -> AbstractCsvReader.ReadEditor
- add: CsvElementReader#getRecordNo()


0.1.5 2011/08/10

- 複数Excelシートを入出力できるようにしました。


0.1.4 2011/08/09

- 固定長ファイルの入出力に対応しました。
- データ部がcsvファイルの途中に登場するレイアウトでも、読めるようにしました。


0.1.3 2011/05/30

- 入力ExcelにHSSFRowがあるにも関わらずHSSFRow#getLastCellNum()が-1を返すことがあるケースに対応しました。


0.1.2 2010/12/26

- CSVを読むとき、Layoutへ定義していない列がCSVにある場合は無視するようにしました。


0.1.1 2010/12/14

- 複数シートのexcelファイルからTSVファイルを作成できるようにしました。
  その際に、TSVファイル名にはシート名を付加するようにしました。


0.1.0 2010/11/09

- 初版。
